class Solution {
public:
    int mod=1e9+7;
     int solve(long long p,int a){
        if(p==1)return a;
        long long int ans=solve(p/2,a);
        ans=(ans*ans)%mod;
        if(p%2)ans=(ans*a)%mod;
        return ans;
    }
    int minNonZeroProduct(int p) {
        if(p==1)return 1;
        long long a=pow(2,p);
        int b=(a-2)%mod;
        long long x=(a/2)-1; 
        long long int res=solve(x,b);
        a=(a-1)%mod;
        res=(res*a)%mod;
        return res;
        
    }
};

/* Based on observation skill
Binary representations of numbers from 1-7 will be :

1 - 001            
2 - 010             
3 - 011            
4 - 100            
5 - 101            
6 - 110            
7 - 111      				
These numbers can be converted into 
1. 001
2. 011
3. 001
4. 011
5. 001
6. 011
7. 111
ans=1*6*1*6*1*6*7
*/
